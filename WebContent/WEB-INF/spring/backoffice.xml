<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean name="backofficeTransactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="backofficeTransactionManager" />
	</bean>

	<bean name="backofficeTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="backofficeDataSource" />
	</bean>

	<bean name="backofficeDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/backoffice" />
	</bean>

	<bean name="backofficeJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="backofficeDataSource" />
	</bean>

	<bean name="jsonObject" class="org.json.JSONObject" />

	<bean name="tpLinkClient" class="eu.christopherlee.admin.client.TpLinkClientImpl" autowire="byType">
		<property name="endPoint" value="${tpLink.endPoint}" />
		<property name="appType" value="${tpLink.params.appType}" />
		<property name="cloudUserName" value="${tpLink.params.cloudUserName}" />
		<property name="cloudPassword" value="${tpLink.params.cloudPassword}" />
		<property name="tokenUrl" value="${tpLink.tokenUrl}" />
		<property name="json" ref="jsonObject" />
	</bean>

	<bean name="tpLinkDao" class="eu.christopherlee.admin.database.TpLinkDaoImpl" autowire="byType">
		<property name="jdbcTemplate" ref="backofficeJdbcTemplate" />
	</bean>

	<bean name="gson" class="com.google.gson.Gson" />

	<bean id="tpLinkManager" name="tpLinkManager" class="eu.christopherlee.admin.manager.TpLinkManager" autowire="byType">
		<property name="transactionTemplate" ref="backofficeTransactionTemplate" />
		<property name="client" ref="tpLinkClient" />
		<property name="dao" ref="tpLinkDao" />
		<property name="gson" ref="gson" />
		<property name="purgeDays" value="${backofficeService.polling.purgeDays}" />
	</bean>

	<bean name="tpLinkTask" class="eu.christopherlee.admin.manager.TpLinkTask" autowire="byType">
		<property name="manager" ref="tpLinkManager" />
	</bean>

	<bean name="backofficeService" class="eu.christopherlee.admin.service.BackofficeServiceImpl" autowire="byType">
		<property name="manager" ref="tpLinkManager" />
		<property name="gson" ref="gson" />
	</bean>

	<!-- QUARTZ configuration -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="eu.christopherlee.admin.manager.TpLinkTask" />
		<property name="jobDataMap">
			<map>
				<entry key="manager" value-ref="tpLinkManager" />
			</map>
		</property>
	</bean>
	
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail" />
		<property name="startDelay" value="${backofficeService.polling.start}" />
		<property name="repeatInterval" value="${backofficeService.polling.interval}" />
	</bean>

	<bean id="purgeJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="eu.christopherlee.admin.manager.TpLinkPurgeTask" />
		<property name="jobDataMap">
			<map>
				<entry key="manager" value-ref="tpLinkManager" />
			</map>
		</property>
	</bean>
	
	<bean id="purgeSimpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="purgeJobDetail" />
		<property name="startDelay" value="${backofficeService.polling.start}" />
		<property name="repeatInterval" value="${backofficeService.polling.purge.interval}" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
				<ref bean="purgeSimpleTrigger" />
			</list>
		</property>
	</bean>
</beans>